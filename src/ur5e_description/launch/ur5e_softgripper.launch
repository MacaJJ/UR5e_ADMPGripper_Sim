<?xml version="1.0"?>
<launch>
  <!-- Gazebo options -->
  <arg name="gui" default="true" doc="Start Gazebo GUI"/>
  <arg name="paused" default="false" doc="Start Gazebo paused"/>
  <arg name="world_name" default="worlds/empty.world" doc="Gazebo world file"/>
  <arg name="world_pose" default="-x 0 -y 0 -z 0 -R 0 -P 0 -Y 0" doc="Pose to spawn the robot at"/>
  <arg name="initial_joint_positions" default=" -J elbow_joint 0 -J finger_1_joint 0 -J finger_2_joint 0 -J finger_3_joint 0 -J finger_4_joint 0 -J servo_1_joint 0 -J servo_2_joint 0 -J servo_3_joint 0 -J servo_4_joint 0 -J shoulder_lift_joint 0 -J shoulder_pan_joint 0 -J wrist_1_joint 0 -J wrist_2_joint 0 -J wrist_3_joint 0" doc="Initial joint configuration of the robot"/>

  <!-- Start Gazebo paused to allow the controllers to pickup the initial pose -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<!-- <arg name="world_name" default="worlds/empty.world"/> -->
		<!-- <arg name="world_name" value="$(find ur5e_description)/world/test_env.world"/> -->
		<arg name="world_name" value="$(find ur5e_description)/world/test_env_v2.world"/> 
    <arg name="paused" value="$(arg paused)"/>
		<arg name="gui" value="$(arg gui)"/>
	</include>

  <!-- Set the robot urdf on the parameter server -->
  <param name="robot_description" command="$(find xacro)/xacro '$(find ur5e_description)/urdf/ur5e_softgripper.urdf.xacro'" />

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -z 0.0" respawn="false" output="screen" />

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find ur5e_softgripper_moveit_config)/config/ros_controllers.yaml" command="load"/>

  <!-- Load the controllers -->
  <node name="arm_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" args="joint_state_controller manipulator_controller"/>

  <node name="gripper_controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" args="gripper_servo_controller gripper_finger_controller"/>

  <!-- Given the published joint states, publish tf for the robot links -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />


</launch>
